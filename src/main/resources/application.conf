sqlctx.dataSourceClassName=com.microsoft.sqlserver.jdbc.SQLServerDataSource
sqlctx.dataSource.user=administrator
sqlctx.dataSource.password="1qaz2wsx3edc4"
sqlctx.dataSource.databaseName=master
sqlctx.dataSource.portNumber=1433
sqlctx.dataSource.serverName=localhost

cassctx.keyspace=dwh
cassctx.preparedStatementCacheSize=1000
cassctx.session.contactPoint=clclcdcdvm001
cassctx.session.port=9042
cassctx.session.queryOptions.fetchSize=1
cassctx.session.queryOptions.consistencyLevel=ONE
cassctx.session.withoutMetrics=true
cassctx.session.withoutJMXReporting=false
cassctx.session.credentials.0=cassandra
cassctx.session.credentials.1=magicvalley77
cassctx.session.maxSchemaAgreementWaitSeconds=1
cassctx.session.addressTranslator=com.datastax.driver.core.policies.IdentityTranslator
cassctx.maxConnectionsPerHost.REMOTE=2000
cassctx.maxConnectionsPerHost.LOCAL=32768
cassctx.core.ConnectionsPerHost.REMOTE=3
cassctx.core.ConnectionsPerHost.LOCAL=4

casprod {
  keyspace=dwh
  preparedStatementCacheSize=1000
  maxConnectionsPerHost.REMOTE=2000
  maxConnectionsPerHost.LOCAL=32768
  session {
    contactPoint=rndlcdcpvm001
    port=9042
    queryOptions.fetchSize=1
    queryOptions.consistencyLevel=ONE
    withoutMetrics=true
    withoutJMXReporting=false
    credentials.0=cassandra
    credentials.1=magicvalley11
    maxSchemaAgreementWaitSeconds=1
    addressTranslator=com.datastax.driver.core.policies.IdentityTranslator
  }
  core {
    ConnectionsPerHost.REMOTE=3
    ConnectionsPerHost.LOCAL=4
  }
}

# AKKA configuration:
akka {
  # for debugging Akka config
  log-config-on-start = off

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # Options: ERROR, WARNING, INFO, DEBUG
  # stdout-loglevel = "OFF"
  loglevel = ERROR

  actor {
    debug {
      receive = on
      autoreceive = on
      lifecycle = on
    }
  }

  log-dead-letters = off
  log-dead-letters-during-shutdown = off
}

// scalikejdbc
# Connection Pool settings
db.crms.poolInitialSize=5
db.crms.poolMaxSize=20
db.crms.poolConnectionTimeoutMillis=3000
db.crms.poolValidationQuery="select current_timestamp"

db.dwh.poolInitialSize=5
db.dwh.poolMaxSize=20
db.dwh.poolConnectionTimeoutMillis=3000
db.dwh.poolValidationQuery="select current_timestamp"

staging {
  db {
    crms {
      driver="com.microsoft.sqlserver.jdbc.SQLServerDriver"
      url="jdbc:sqlserver://CRMWCDCDSQLVM01:1433;DatabaseName=CRMS.QA"
      user="hackclick"
      password="12345678"
    },
    dwh {
      driver="com.microsoft.sqlserver.jdbc.SQLServerDriver"
      url="jdbc:sqlserver://CLCWCDCPAP001:1433;DatabaseName=dwh$staging"
      user="hackclick"
      password="12345678"
    }
  }
}

prod {
  db {
    crms {
      driver="com.microsoft.sqlserver.jdbc.SQLServerDriver"
      url="jdbc:sqlserver://CRMWCDCPSQLVM01:1433;DatabaseName=ClinicalResearch"
      user="hackclick"
      password="12345678"
    },
    dwh {
      driver="com.microsoft.sqlserver.jdbc.SQLServerDriver"
      url="jdbc:sqlserver://CLCWCDCPAP001:1433;DatabaseName=dwh$production"
      user="hackclick"
      password="12345678"
    }
  },
  epic {
    patient {
      search {
        url = "http://epcwbdcpintvm02.nyumc.org/Interconnect-CLICKPRD/wcf/Epic.EMPI.GeneratedServices/Patient.svc/basic"
        user = "EMP:CLICKLOOKUP"
        password="Click2017@!#"
      }
    }
  }
}
